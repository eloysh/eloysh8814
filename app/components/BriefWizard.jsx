"use client";
import React, { useState, useMemo } from "react";
import WhatsAppButton from "./WhatsAppButton";

export default function BriefWizard() {
  // —à–∞–≥–∏
  const [step, setStep] = useState(0);

  // –ø–æ–ª—è –±—Ä–∏—Ñ–∞
  const [eventType, setEventType] = useState("–Æ–±–∏–ª–µ–π / –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è");
  const [purpose, setPurpose] = useState("–ü–∞–º—è—Ç—å / —Å–µ–º–µ–π–Ω–æ–µ –≤–∏–¥–µ–æ");
  const [mood, setMood] = useState("–ª–∏—Ä–∏—á–µ—Å–∫–∞—è, –Ω–µ–∂–Ω–∞—è");
  const [style, setStyle] = useState("–ø–æ–ø / –∞–∫—É—Å—Ç–∏–∫–∞");
  const [length, setLength] = useState("–¥–æ 1 –º–∏–Ω—É—Ç—ã (Shorts/Reels)");
  const [deadline, setDeadline] = useState("");
  const [budget, setBudget] = useState("–¥–æ 10 000 ‚ÇΩ");
  const [refs, setRefs] = useState(""); // —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã/—Ä–µ—Ñ—ã
  const [names, setNames] = useState(""); // –∏–º–µ–Ω–∞/–¥–∞—Ç—ã/–≤–∞–∂–Ω—ã–µ —Ñ—Ä–∞–∑—ã
  const [voice, setVoice] = useState("–∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å / –º—è–≥–∫–∏–π —Ç–µ–º–±—Ä");

  // –∫–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–∫–∞–∑—á–∏–∫–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
  const [clientName, setClientName] = useState("");
  const [clientPhone, setClientPhone] = useState("");

  // –ø—Ä–æ—Å—Ç–æ–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —à–∞–≥–æ–≤
  const canNext = useMemo(() => {
    if (step === 0) return Boolean(eventType && purpose);
    if (step === 1) return Boolean(mood && style && length);
    if (step === 2) return true; // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (step === 3) return true; // –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
    return true;
  }, [step, eventType, purpose, mood, style, length]);

  const next = () => canNext && setStep((s) => Math.min(4, s + 1));
  const back = () => setStep((s) => Math.max(0, s - 1));

  // ‚úÖ –°–ë–û–†–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –î–õ–Ø WHATSAPP
  const buildSummary = () => {
    const lines = [];
    lines.push("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –ø–µ—Å–Ω—é/—Ä–æ–ª–∏–∫ üëã");
    lines.push("");
    lines.push("‚Äî –ó–∞–¥–∞—á–∞:");
    lines.push(`‚Ä¢ –°–æ–±—ã—Ç–∏–µ: ${eventType}`);
    lines.push(`‚Ä¢ –¶–µ–ª—å: ${purpose}`);
    lines.push("");
    lines.push("‚Äî –ú—É–∑—ã–∫–∞:");
    lines.push(`‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${mood}`);
    lines.push(`‚Ä¢ –°—Ç–∏–ª—å: ${style}`);
    lines.push(`‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${length}`);
    if (voice) lines.push(`‚Ä¢ –ì–æ–ª–æ—Å/—Ç–µ–º–±—Ä: ${voice}`);
    lines.push("");
    lines.push("‚Äî –ü–æ–∂–µ–ª–∞–Ω–∏—è –∏ —Å—Ä–æ–∫–∏:");
    if (deadline) lines.push(`‚Ä¢ –î–µ–¥–ª–∞–π–Ω: ${deadline}`);
    if (budget) lines.push(`‚Ä¢ –ë—é–¥–∂–µ—Ç: ${budget}`);
    if (refs)   lines.push(`‚Ä¢ –†–µ—Ñ–µ—Ä–µ–Ω—Å—ã: ${refs}`);
    if (names)  lines.push(`‚Ä¢ –ò–º–µ–Ω–∞/–¥–∞—Ç—ã/—Ñ—Ä–∞–∑—ã: ${names}`);
    lines.push("");
    if (clientName || clientPhone) {
      lines.push("‚Äî –ö–æ–Ω—Ç–∞–∫—Ç—ã:");
      if (clientName)  lines.push(`‚Ä¢ –ò–º—è: ${clientName}`);
      if (clientPhone) lines.push(`‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${clientPhone}`);
      lines.push("");
    }
    lines.push("–ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏!");
    return lines.join("\n");
  };

  // UI —à–∞–≥–æ–≤
  const StepControls = () => (
    <div className="flex items-center justify-between mt-6">
      <button
        onClick={back}
        disabled={step === 0}
        className="px-4 py-2 rounded-xl bg-white/5 border border-white/10 disabled:opacity-50"
      >
        –ù–∞–∑–∞–¥
      </button>
      {step < 4 ? (
        <button
          onClick={next}
          disabled={!canNext}
          className="px-4 py-2 rounded-xl bg-sky-600 hover:bg-sky-500 transition disabled:opacity-50"
        >
          –î–∞–ª–µ–µ
        </button>
      ) : null}
    </div>
  );

  return (
    <div className="card-glass rounded-2xl p-6 max-w-2xl mx-auto">
      <div className="text-center mb-4 text-sm text-slate-400">
        –®–∞–≥ {step + 1} –∏–∑ 5
      </div>

      {step === 0 && (
        <div>
          <h3 className="text-xl font-semibold mb-2">–û —Å–æ–±—ã—Ç–∏–∏</h3>
          <div className="grid gap-4">
            <div>
              <label className="block text-sm mb-1 text-slate-300">–°–æ–±—ã—Ç–∏–µ</label>
              <select
                value={eventType}
                onChange={(e) => setEventType(e.target.value)}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              >
                <option>–Æ–±–∏–ª–µ–π / –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è</option>
                <option>–°–≤–∞–¥—å–±–∞ / –≥–æ–¥–æ–≤—â–∏–Ω–∞</option>
                <option>–†–µ–∫–ª–∞–º–∞ / –ø—Ä–æ–º–æ-—Ä–æ–ª–∏–∫</option>
                <option>–ü–æ–¥–∞—Ä–æ–∫ / –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ</option>
                <option>–î—Ä—É–≥–æ–µ</option>
              </select>
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–¶–µ–ª—å</label>
              <select
                value={purpose}
                onChange={(e) => setPurpose(e.target.value)}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              >
                <option>–ü–∞–º—è—Ç—å / —Å–µ–º–µ–π–Ω–æ–µ –≤–∏–¥–µ–æ</option>
                <option>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π —Ä–æ–ª–∏–∫</option>
                <option>–°—Ç–æ—Ä–∏—Å / Reels / Shorts</option>
                <option>–ü–µ—Å–Ω—è-–ø–æ–¥–∞—Ä–æ–∫</option>
                <option>–î—Ä—É–≥–æ–µ</option>
              </select>
            </div>
          </div>
          <StepControls />
        </div>
      )}

      {step === 1 && (
        <div>
          <h3 className="text-xl font-semibold mb-2">–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</h3>
          <div className="grid gap-4">
            <div>
              <label className="block text-sm mb-1 text-slate-300">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</label>
              <input
                value={mood}
                onChange={(e) => setMood(e.target.value)}
                placeholder="–ª–∏—Ä–∏—á–µ—Å–∫–∞—è, –Ω–µ–∂–Ω–∞—è / –¥—Ä–∞–π–≤–æ–≤–∞—è / –∫–∏–Ω–æ—à–Ω–∞—è‚Ä¶"
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–°—Ç–∏–ª—å</label>
              <input
                value={style}
                onChange={(e) => setStyle(e.target.value)}
                placeholder="–ø–æ–ø / –∞–∫—É—Å—Ç–∏–∫–∞ / –∫–∏–Ω–æ / —Ä—ç–ø / EDM‚Ä¶"
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</label>
              <select
                value={length}
                onChange={(e) => setLength(e.target.value)}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              >
                <option>–¥–æ 1 –º–∏–Ω—É—Ç—ã (Shorts/Reels)</option>
                <option>1‚Äì2 –º–∏–Ω—É—Ç—ã</option>
                <option>2‚Äì3 –º–∏–Ω—É—Ç—ã</option>
                <option>–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ç—Ä–µ–∫ (3+ –º–∏–Ω)</option>
              </select>
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–ì–æ–ª–æ—Å/—Ç–µ–º–±—Ä</label>
              <input
                value={voice}
                onChange={(e) => setVoice(e.target.value)}
                placeholder="–∂–µ–Ω—Å–∫–∏–π / –º—É–∂—Å–∫–æ–π / –¥–µ—Ç—Å–∫–∏–π; –º—è–≥–∫–∏–π / —è—Ä–∫–∏–π‚Ä¶"
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
          </div>
          <StepControls />
        </div>
      )}

      {step === 2 && (
        <div>
          <h3 className="text-xl font-semibold mb-2">–ü–æ–∂–µ–ª–∞–Ω–∏—è –∏ –≤–≤–æ–¥–Ω—ã–µ</h3>
          <div className="grid gap-4">
            <div>
              <label className="block text-sm mb-1 text-slate-300">–î–µ–¥–ª–∞–π–Ω</label>
              <input
                value={deadline}
                onChange={(e) => setDeadline(e.target.value)}
                placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ 15 –Ω–æ—è–±—Ä—è"
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–û—Ä–∏–µ–Ω—Ç–∏—Ä –ø–æ –±—é–¥–∂–µ—Ç—É</label>
              <select
                value={budget}
                onChange={(e) => setBudget(e.target.value)}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              >
                <option>–¥–æ 10 000 ‚ÇΩ</option>
                <option>10 000‚Äì20 000 ‚ÇΩ</option>
                <option>20 000‚Äì40 000 ‚ÇΩ</option>
                <option>40 000+ ‚ÇΩ</option>
                <option>–æ–±—Å—É–¥–∏–º</option>
              </select>
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã</label>
              <textarea
                value={refs}
                onChange={(e) => setRefs(e.target.value)}
                placeholder="YouTube/Spotify/VK/Drive —Å—Å—ã–ª–∫–∏, –ø—Ä–∏–º–µ—Ä—ã, —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã‚Ä¶"
                rows={3}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–ò–º–µ–Ω–∞/–¥–∞—Ç—ã/–≤–∞–∂–Ω—ã–µ —Ñ—Ä–∞–∑—ã</label>
              <textarea
                value={names}
                onChange={(e) => setNames(e.target.value)}
                placeholder="–ö–æ–≥–æ —É–ø–æ–º—è–Ω—É—Ç—å? –î–∞—Ç—ã? –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞? –°—é–∂–µ—Ç?"
                rows={3}
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
          </div>
          <StepControls />
        </div>
      )}

      {step === 3 && (
        <div>
          <h3 className="text-xl font-semibold mb-2">–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è</h3>
          <div className="grid gap-4">
            <div>
              <label className="block text-sm mb-1 text-slate-300">–ò–º—è</label>
              <input
                value={clientName}
                onChange={(e) => setClientName(e.target.value)}
                placeholder="–í–∞—à–µ –∏–º—è"
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
            <div>
              <label className="block text-sm mb-1 text-slate-300">–¢–µ–ª–µ—Ñ–æ–Ω (WhatsApp)</label>
              <input
                value={clientPhone}
                onChange={(e) => setClientPhone(e.target.value)}
                placeholder="+7 ..."
                className="w-full p-3 rounded-xl bg-white/5 border border-white/10"
              />
            </div>
          </div>
          <StepControls />
        </div>
      )}

      {step === 4 && (
        <div className="text-center">
          <h3 className="text-xl font-semibold mb-2">–ì–æ—Ç–æ–≤–æ!</h3>
          <p className="text-slate-300 mb-4">
            –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—Ä–∏—Ñ –≤ WhatsApp. –Ø –æ—Ç–≤–µ—á—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
          </p>

          {/* ‚úÖ –¢–µ–ø–µ—Ä—å —Ñ—É–Ω–∫—Ü–∏—è buildSummary —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç */}
          <WhatsAppButton text={buildSummary()} className="w-full justify-center" />

          {/* –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ WhatsAppButton –µ—â—ë –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∏):
          <a
            href={`https://wa.me/79841933792?text=${encodeURIComponent(buildSummary())}`}
            target="_blank"
            rel="noopener noreferrer"
            className="btn btn-primary w-full justify-center inline-flex mt-3"
          >
            –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp
          </a> 
          */}
        </div>
      )}
    </div>
  );
}
